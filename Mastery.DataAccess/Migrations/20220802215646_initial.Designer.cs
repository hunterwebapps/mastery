// <auto-generated />
using System;
using Mastery.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mastery.DataAccess.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20220802215646_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Mastery.DataAccess.Entities.Activity", b =>
                {
                    b.Property<string>("ActivityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DecisionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NextEventId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ActivityId");

                    b.HasIndex("ActivityTypeId");

                    b.HasIndex("DecisionId");

                    b.HasIndex("NextEventId");

                    b.ToTable("DecisionActivities");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.ActivityType", b =>
                {
                    b.Property<int>("ActivityTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityTypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityTypeId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Decision", b =>
                {
                    b.Property<string>("DecisionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("DecisionId");

                    b.HasIndex("EventId");

                    b.ToTable("Decisions");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Event", b =>
                {
                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QuestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EventId");

                    b.HasIndex("EventTypeId");

                    b.HasIndex("QuestId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.EventType", b =>
                {
                    b.Property<string>("EventTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventTypeId");

                    b.ToTable("EventTypes");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Quest", b =>
                {
                    b.Property<string>("QuestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("QuestId");

                    b.HasIndex("UserId");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Skill", b =>
                {
                    b.Property<string>("SkillId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SkillId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Activity", b =>
                {
                    b.HasOne("Mastery.DataAccess.Entities.ActivityType", "ActivityType")
                        .WithMany("DecisionActions")
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mastery.DataAccess.Entities.Decision", "Decision")
                        .WithMany("PotentialActivities")
                        .HasForeignKey("DecisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mastery.DataAccess.Entities.Event", "NextEvent")
                        .WithMany()
                        .HasForeignKey("NextEventId");

                    b.Navigation("ActivityType");

                    b.Navigation("Decision");

                    b.Navigation("NextEvent");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Decision", b =>
                {
                    b.HasOne("Mastery.DataAccess.Entities.Event", "Event")
                        .WithMany("Decisions")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Event", b =>
                {
                    b.HasOne("Mastery.DataAccess.Entities.EventType", "EventType")
                        .WithMany("Events")
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mastery.DataAccess.Entities.Quest", "Quest")
                        .WithMany("Events")
                        .HasForeignKey("QuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");

                    b.Navigation("Quest");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Quest", b =>
                {
                    b.HasOne("Mastery.DataAccess.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.ActivityType", b =>
                {
                    b.Navigation("DecisionActions");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Decision", b =>
                {
                    b.Navigation("PotentialActivities");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Event", b =>
                {
                    b.Navigation("Decisions");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.EventType", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Mastery.DataAccess.Entities.Quest", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
